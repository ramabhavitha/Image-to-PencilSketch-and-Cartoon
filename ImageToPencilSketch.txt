import streamlit as st
import cv2
import numpy as np
import matplotlib.pyplot as plt

# Function to load and display the original image
def read_file(filename):
    img = cv2.imread(filename)
    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    st.image(img, caption="Original Image", use_column_width=True)
    return img

# Function to create an edge mask
def edge_mask(img, line_size, blur_value):
    gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)
    gray_blur = cv2.medianBlur(gray, blur_value)
    edges = cv2.adaptiveThreshold(gray_blur, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, line_size, blur_value)
    st.image(edges, caption="Edge Mask", use_column_width=True, cmap="binary")
    return edges

# Function for color quantization
def color_quantization(img, k):
    data = np.float32(img).reshape((-1, 3))
    criteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 20, 0.001)
    ret, label, center = cv2.kmeans(data, k, None, criteria, 10, cv2.KMEANS_RANDOM_CENTERS)
    center = np.uint8(center)
    result = center[label.flatten()]
    result = result.reshape(img.shape)
    st.image(result, caption="Color Quantization", use_column_width=True)
    return result

# Function to cartoonify the image
def cartoon():
    c = cv2.bitwise_and(blurred, blurred, mask=edges)
    st.image(c, caption="Cartoonified Image", use_column_width=True)
    st.image(org_image, caption="Original Image", use_column_width=True)

# Streamlit app
def main():
    st.title("Pencil sketch and Cartoonification App")

    # Sidebar for file upload
    uploaded_file = st.sidebar.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])

    if uploaded_file is not None:
        st.sidebar.image(uploaded_file, caption="Uploaded Image", use_column_width=True)
        img = read_file(uploaded_file.name)
        org_image = np.copy(img)

        line_size, blur_value = 5, 7
        edges = edge_mask(img, line_size, blur_value)

        img_quantized = color_quantization(img, k=5)

        blurred = cv2.bilateralFilter(img_quantized, d=3, sigmaColor=200, sigmaSpace=200)

        cartoon()

if _name_ == "_main_":
    main()
